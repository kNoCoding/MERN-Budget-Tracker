// Container: Centers content and sets max-width
.container {
  width: 100%;
  max-width: $container-width;
  margin-right: auto;
  margin-left: auto;
  padding-right: calc($gutter-width / 2);
  padding-left: calc($gutter-width / 2);

  @include tablet {
    padding-right: $gutter-width;
    padding-left: $gutter-width;
  }
}

// Main layout structure
.main-layout {
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "header-area"
    "body-area"
    "footer-area";

  padding-top: env(safe-area-inset-top, $spacing-unit);
  padding-bottom: env(safe-area-inset-bottom, $spacing-unit);
  padding-left: env(safe-area-inset-left, $spacing-unit);
  padding-right: env(safe-area-inset-right, $spacing-unit);

  height: 100vh;
  overflow: hidden;
}

header {
  grid-area: header-area;
  padding-top: env(safe-area-inset-top, $spacing-unit);
}

main {
  grid-area: body-area;
  overflow-y: auto;
  max-height: 100%;

  padding-bottom: env(safe-area-inset-bottom, 0);

  // Hiding scrollbar for Firefox
  scrollbar-width: none;

  // Hiding scrollbar for Webkit browsers like Chrome, Safari
  &::-webkit-scrollbar {
    display: none;
  }
}

footer {
  grid-area: footer-area;
  padding-bottom: env(safe-area-inset-bottom, $spacing-unit);
}

// Example component adjustments with media queries
@include mobile {
  .main-layout {
    padding: calc($spacing-unit / 2); // Reduce padding on smaller devices
    padding: env(safe-area-inset-top, calc($spacing-unit / 2)) env(safe-area-inset-right, calc($spacing-unit / 2)) env(safe-area-inset-bottom, calc($spacing-unit / 2)) env(safe-area-inset-left, calc($spacing-unit / 2));
  }

}

@include tablet {
  .main-layout {
    padding: $spacing-unit; // Default padding
    padding: env(safe-area-inset-top, $spacing-unit) env(safe-area-inset-right, $spacing-unit) env(safe-area-inset-bottom, $spacing-unit) env(safe-area-inset-left, $spacing-unit);
  }

}

@include desktop {
  .main-layout {
    padding: calc($spacing-unit * 1.5); // Increase padding for desktop
    padding: env(safe-area-inset-top, calc($spacing-unit * 1.5)) env(safe-area-inset-right, calc($spacing-unit * 1.5)) env(safe-area-inset-bottom, calc($spacing-unit * 1.5)) env(safe-area-inset-left, calc($spacing-unit * 1.5));
  }

}

@include desktop-large {}

// Sample content area
.content-area {
  flex-grow: 1; // Allows the content area to fill the space
}

// Header and footer layout
.header,
.footer {
  padding: $spacing-unit;
  text-align: center;
}